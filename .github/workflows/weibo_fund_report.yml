name: Weibo Fund Report Generator

on:
  schedule:
    - cron: "0 0 * * *"  # 每天00:00 UTC（对应上海时间08:00 CST）
  push:
    paths:
      - 'weibo_fund_report.py'
      - '.github/workflows/weibo_fund_report.yml'
      - 'requirements.txt'
  workflow_dispatch:

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- 1. 设置 Python 并缓存依赖 ---
      - name: Set up Python and Cache Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # --- 2. 安装 Node.js (用于运行 MCP Server) ---
      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # --- 3. 安装并启动 mcp-server-weibo (后台服务) ---
      - name: Install and Start mcp-server-weibo
        run: |
          # 全局安装 mcp-server-weibo
          npm install -g mcp-server-weibo
          # 启动服务器并在后台运行
          nohup mcp-server-weibo > nohup.out 2>&1 &
          echo "MCP server started in background."
          
          # **关键修复：使用 curl 的内置重试机制进行健康检查 (更可靠)**
          echo "Waiting for MCP server to be ready (max 30s)..."
          curl -s --fail --show-error --retry 30 --retry-delay 1 --retry-connrefused http://localhost:3000/
          if [ $? -ne 0 ]; then
              echo "--------------------------------------------------------"
              echo "❌ ERROR: MCP Server failed to start within 30 seconds!"
              echo "--------------------------------------------------------"
              echo "Startup Logs (nohup.out):"
              cat nohup.out
              exit 1
          fi
          echo "🎉 MCP Server is up and running."

      # --- 4. 运行 Python 脚本 (现在调用本地 API) ---
      - name: Run Weibo fund report script
        env:
          WEIBO_KEYWORD: "基金"
        run: python weibo_fund_report.py

      - name: Commit and push report
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add reports/*
          # 仅在有更改时才提交
          git diff --quiet --exit-code || (git commit -m "Auto: Generate Weibo Fund Report (MCP)" && git push)
        
      # --- 5. 清理后台进程 ---
      - name: Cleanup Background Processes
        if: always()
        run: |
          pkill -f mcp-server-weibo || true
          echo "MCP server stopped."
